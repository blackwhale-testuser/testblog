# build.yml
on:
  pull_request:
    paths:
    - "**/*.yml"
    - "**/*.html"
    - "**/*.js"
  push:
    paths:
    - "**/*.yml"
    - "**/*.html"
    - "**/*.js"
    branches:
    - main                     

name: Build and Push an Image to ECR

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: ap-northeast-2
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: guestbook:${{ github.sha }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@master

      - name: npm install
        uses: actions/npm@master
        with:
          args: install
      - name: npm test
        uses: actions/npm@master
        with:
          args: run test
      - name: npm lint
        uses: actions/npm@master
        with:
          args: run lint
          
      # Add steps here like linting, testing, minification, etc.
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}  
 
      - name: Setup ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build and tag the image
        run: |
          # Build and tag the image
          docker build \
            -t $CONTAINER_IMAGE \
            -t public.ecr.aws/e1s6t4d5/testblog/$CONTAINER_IMAGE .
          
      # Set image tag in kustomization

      - name: Set image tag
        run: |
           cd deploy
           kustomize edit set image public.ecr.aws/e1s6t4d5/testblog/$CONTAINER_IMAGE
           cat kustomization.yaml
      - name: Commit kustomization
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -a -m "$CONTAINER_IMAGE"
      - name: Push changes to master
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true       
    
    # Add additional steps here like scanning of image

    # Only push to registry on master
      - name: Push
        if: github.ref == 'refs/heads/master'
        run: |
          # Push image to AWS ECR
          docker push public.ecr.aws/e1s6t4d5/testblog/$CONTAINER_IMAGE
